name: Terraform Infra Workflow

on:
  push:
    branches:
      - master
permissions:
  id-token: write   
  contents: read   
env:
  TF_VERSION: 1.5.7
jobs:
  VPC-Infra-Terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: IAC-resources/environments/demo/vpc
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS CLI
        run: |
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
          aws configure set default.output json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Install Terragrunt
        run: |
          curl -Lo /tmp/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.16/terragrunt_linux_amd64
          chmod +x /tmp/terragrunt
          sudo mv /tmp/terragrunt /usr/local/bin/
        
      - name: Initialize Terragrunt
        run:  terragrunt init --terragrunt-non-interactive

      - name: Terragrunt Plan
        run: terragrunt plan -out=vpctfplan

      - name: Terragrunt Apply
        run: terragrunt apply -auto-approve vpctfplan

  EKS-Infra-Terraform:
    runs-on: ubuntu-latest
    needs: VPC-Infra-Terraform
    defaults:
      run:
        working-directory: IAC-resources/environments/demo/eks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS CLI
        run: |
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
          aws configure set default.output json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Install Terragrunt
        run: |
          curl -Lo /tmp/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.16/terragrunt_linux_amd64
          chmod +x /tmp/terragrunt
          sudo mv /tmp/terragrunt /usr/local/bin/

      - name: Initialize Terragrunt
        run: terragrunt init

      - name: Terragrunt Plan
        run: terragrunt plan -out=ekstfplan

      - name: Terragrunt Apply
        run: terragrunt apply -auto-approve ekstfplan

      - name: Save kubeconfig locally
        run: |
          mkdir -p $HOME/.kube
          terraform output kubeconfig > $HOME/.kube/config
        shell: bash
    
      - name: Upload kubeconfig as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubeconfig
          path: $HOME/.kube/config

  Update-EKS-Cluster:
    runs-on: ubuntu-latest
    needs: ['VPC-Infra-Terraform' , 'EKS-Infra-Terraform']

    steps:
    - name: Download kubeconfig artifact
      uses: actions/download-artifact@v3
      with:
        name: kubeconfig
        path: $HOME/.kube

    # - name: Set KUBECONFIG environment variable
    #   run: |
    #     echo "::set-env name=KUBECONFIG::$HOME/.kube/cluster.yaml"
    #   shell: bash

    - name: Verify kubectl configuration
      run: kubectl config current-context

    - name: Get Namespaces 
      run: kubectl get ns  



